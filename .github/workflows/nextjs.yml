---
  # Sample workflow for building and deploying a Next.js site to GitHub Pages
  #
  # To get started with Next.js see: https://nextjs.org/docs/getting-started
  #
  name: Deploy Next.js site to Pages

  on:
    # Runs on pushes targeting the default branch
    push:
      branches: [main]
    # Allows you to run this workflow manually from the Actions tab

    pull_request:
      types: [opened,reopened]

    workflow_dispatch:
      inputs:
        username:
          type: string
          description: who to deploy page
          default: al3xdiaz

  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
  permissions:
    contents: read
    pages: write
    id-token: write

  # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
  # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
  concurrency:
    group: pages
    cancel-in-progress: false

  env:
    REGISTRY: ghcr.io/${{ github.repository_owner }}
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
    IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1
    API_URL: https://api.chaoticteam.com
    BASE_URL: http://portfolio.chaoticteam.com

  jobs:
    calculate-version:
      runs-on: ubuntu-latest
      outputs:
        MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
        FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Install GitVersion
          uses: gittools/actions/gitversion/setup@v0
          with:
            versionSpec: 5.x
        - name: Determine Version
          id: gitversion
          uses: gittools/actions/gitversion/execute@v0
        - name: Set Outputs major version
          id: set-outputs-major
          run: echo "MajorMinorPatch=${{ steps.gitversion.outputs.majorMinorPatch }}" >> $GITHUB_OUTPUT
        - name: Set Outputs full version
          id: set-outputs-full
          run: echo "FullSemVer=${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_OUTPUT
    # Build job
    build:
      runs-on: ubuntu-latest
      permissions:
        packages: write
        contents: read
      needs: [calculate-version]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: "20"
        - name: Setup Pages
          uses: actions/configure-pages@v4
          with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
            static_site_generator: next
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: |
            echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        - uses: actions/cache@v3
          id: yarn-cache
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - uses: actions/cache@v3
          with:
            path: |
              ${{ github.workspace }}/build/cache
              # Generate a new cache whenever packages or source files change.
            key: ${{ runner.os }}-nextjs-${{ hashFiles('./yarn.lock') }}-${{ hashFiles('**/**/*.ts', '**/**/*.tsx') }}
            # If source files changed but packages didn't, rebuild from a prior cache.
            restore-keys: |
                ${{ runner.os }}-nextjs-${{ hashFiles('./yarn.lock') }}-
        - name: Build portafolio
          run: |
            echo "build image"
            yarn version --no-git-tag-version --new-version  "${{ needs.calculate-version.outputs.MajorMinorPatch }}"
            yarn
            yarn build
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v3
          with:
            path: ./out

    # Deployment job
    deploy:
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
